program = { SOI ~ (expr ~ NLS)+ ~ EOI }

function         =  { function_declare ~ NLS ~ function_block }
function_declare = _{ fun ~ ident ~ function_params }
function_params  =  { (ident)* }
function_block   = _{ begin ~ NLS ~ function_body ~ NLS ~ end }
function_body    =  { ((expr | function_return) ~ NLS)* }
function_return  = _{ ret ~ (expr)* }

function_call = { (ident)* } // Controversial

variable_declare = { let ~ ident ~ variable_init? }
variable_init    = { load ~ expr }
variable_assign  = { ident ~ load ~ expr }

str  = @{ "'" ~ char* ~ "'" }
char =  {
    !("'") ~ ANY
}

num   = _{ float | int }
int   = @{ ASCII_DIGIT+ }
float = @{ ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT* }

keyword =  { fun | begin | end | ret }
fun     = @{ "fun" }
begin   = @{ "begin" }
end     = @{ "end" }
ret     = @{ "ret" }
true    = @{ "true" }
false   = @{ "false" }
let     = @{ "let" }
load    = @{ "load" }

// Any alphanumeric string that does not begin with a digit except keywords
ident = @{ !(ASCII_DIGIT) ~ !(keyword ~ !ASCII_ALPHANUMERIC) ~ ASCII_ALPHANUMERIC+ }

expr = { num | str | variable_declare | variable_assign | function | ident }

WHITESPACE = _{ " " }
COMMENT    = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" }
NLS        = _{ (NEWLINE)* }
